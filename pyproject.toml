[project]
name = "txtai-mcp-server"
version = "0.1.0"
description = "A Model Context Protocol (MCP) server implementation for txtai"
readme = "README.md"
requires-python = ">=3.10"
license = { text = "MIT" }
authors = [
    { name = "Codeium", email = "support@codeium.com" }
]
dependencies = [
    "mcp[cli]", # Core MCP functionality
    "trio", # Required for MCP server async functionality
    "txtai[all,pipeline]>=8.3.1",  # Include all txtai extras for full functionality
    "datasets",
    "torch>=2.0.0",
    "transformers>=4.30.0",
    "sentence-transformers>=2.2.0",
    "httpx>=0.28.1",
    "bitsandbytes==0.42.0",  # Pin to working version
    "pydantic-settings>=2.0"
]

[project.scripts]
txtai-mcp-server = "txtai_mcp_server:main"

[project.optional-dependencies]
dev = [
    "pytest>=7.0",
    "pytest-asyncio",
    "pytest-cov",
    "black",
    "isort",
    "mypy",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src/txtai_mcp_server"]

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py"]

[tool.black]
line-length = 100
target-version = ["py310"]
include = '\.pyi?$'

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 100

[tool.mypy]
python_version = "3.10"
warn_return_any = true
warn_unused_configs = true
check_untyped_defs = true

[tool.uv.workspace]
members = ["mcp"]
